{"ast":null,"code":"// import { createSlice, useDispatch } from \"@reduxjs/toolkit\";\n// import { uiActions } from \"./ui-slice\";\n\n// const cartSlice = createSlice({\n//   name: \"cart\",\n//   initialState: {\n//     items: [],\n//     totalQuantity: 0,\n//     totalPrice: 0,\n//   },\n//   reducers: {\n//     addItem(state, action) {\n//       const newItem = action.payload;\n//       const existingItem = state.items.find((item) => item.id === newItem.id);\n//       state.totalQuantity++;\n//       if (!existingItem) {\n//         state.items.push({\n//           id: newItem.id,\n//           price: newItem.price,\n//           quantity: 1,\n//           totalPrice: newItem.price,\n//           name: newItem.title,\n//         });\n//       } else {\n//         existingItem.quantity++;\n//         existingItem.totalPrice += newItem.price;\n//       }\n//     },\n\n//     removeItem(state, action) {\n//       const id = action.payload;\n//       const existingItem = state.items.find((item) => item.id === id);\n//       state.totalQuantity--;\n\n//       if (existingItem.quantity === 1) {\n//         state.items = state.items.filter((item) => item.id !== id); // RETURN ALL ITEM EXCLUDING THIS ONE\n//       } else {\n//         existingItem.quantity--;\n//         existingItem.totalPrice -= existingItem.price;\n//       }\n//     },\n//   },\n// });\n\n// export const sendCardData = (cart) => {\n//   return async (dispatch) => {\n//     dispatch(\n//       uiActions.showNotification({\n//         status: \"pending\",\n//         title: \"Sending...\",\n//         message: \"Sending cart data!\",\n//       })\n//     );\n//   };\n// };\n\n// const sendRequest = async () => {\n//   const response = await fetch(\n//     \"https://hisham-shop-default-rtdb.firebaseio.com/cart.json\",\n//     {\n//       method: \"PUT\",\n//       body: JSON.stringify(cart),\n//     }\n//   );\n//   if (!response.ok) {\n//     throw new Error(\"Sending cart data is failed!\");\n//   }\n// };\n\n// try {\n//   await sendRequest();\n\n//   dispatch(\n//     uiActions.showNotification({\n//       status: \"success\",\n//       title: \"Success...\",\n//       message: \"Sent cart data successfully!\",\n//     })\n//   );\n// } catch (error) {\n//   dispatch(\n//     uiActions.showNotification({\n//       status: \"error\",\n//       title: \"Error...\",\n//       message: \"Sent cart data failed!\",\n//     })\n//   );\n// }\n\n// export const cartActions = cartSlice.actions;\n// export default cartSlice;\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalPrice: 0\n  },\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice += newItem.price;\n      }\n    },\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    }\n  }\n});\nexport const sendCardData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://hisham-shop-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed!\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success...\",\n        message: \"Sent cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error...\",\n        message: \"Sent cart data failed!\"\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","totalPrice","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","title","removeItem","filter","sendCardData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["/home/hishamls/0-webProjects/0-ReactProjects/redux2/redux-app-2/src/store/cart-slice.js"],"sourcesContent":["// import { createSlice, useDispatch } from \"@reduxjs/toolkit\";\n// import { uiActions } from \"./ui-slice\";\n\n// const cartSlice = createSlice({\n//   name: \"cart\",\n//   initialState: {\n//     items: [],\n//     totalQuantity: 0,\n//     totalPrice: 0,\n//   },\n//   reducers: {\n//     addItem(state, action) {\n//       const newItem = action.payload;\n//       const existingItem = state.items.find((item) => item.id === newItem.id);\n//       state.totalQuantity++;\n//       if (!existingItem) {\n//         state.items.push({\n//           id: newItem.id,\n//           price: newItem.price,\n//           quantity: 1,\n//           totalPrice: newItem.price,\n//           name: newItem.title,\n//         });\n//       } else {\n//         existingItem.quantity++;\n//         existingItem.totalPrice += newItem.price;\n//       }\n//     },\n\n//     removeItem(state, action) {\n//       const id = action.payload;\n//       const existingItem = state.items.find((item) => item.id === id);\n//       state.totalQuantity--;\n\n//       if (existingItem.quantity === 1) {\n//         state.items = state.items.filter((item) => item.id !== id); // RETURN ALL ITEM EXCLUDING THIS ONE\n//       } else {\n//         existingItem.quantity--;\n//         existingItem.totalPrice -= existingItem.price;\n//       }\n//     },\n//   },\n// });\n\n// export const sendCardData = (cart) => {\n//   return async (dispatch) => {\n//     dispatch(\n//       uiActions.showNotification({\n//         status: \"pending\",\n//         title: \"Sending...\",\n//         message: \"Sending cart data!\",\n//       })\n//     );\n//   };\n// };\n\n// const sendRequest = async () => {\n//   const response = await fetch(\n//     \"https://hisham-shop-default-rtdb.firebaseio.com/cart.json\",\n//     {\n//       method: \"PUT\",\n//       body: JSON.stringify(cart),\n//     }\n//   );\n//   if (!response.ok) {\n//     throw new Error(\"Sending cart data is failed!\");\n//   }\n// };\n\n// try {\n//   await sendRequest();\n\n//   dispatch(\n//     uiActions.showNotification({\n//       status: \"success\",\n//       title: \"Success...\",\n//       message: \"Sent cart data successfully!\",\n//     })\n//   );\n// } catch (error) {\n//   dispatch(\n//     uiActions.showNotification({\n//       status: \"error\",\n//       title: \"Error...\",\n//       message: \"Sent cart data failed!\",\n//     })\n//   );\n// }\n\n// export const cartActions = cartSlice.actions;\n// export default cartSlice;\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalPrice: 0,\n  },\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice += newItem.price;\n      }\n    },\n\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    },\n  },\n});\n\nexport const sendCardData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://hisham-shop-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed!\");\n      }\n    };\n\n    try {\n      await sendRequest();\n\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success...\",\n          message: \"Sent cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error...\",\n          message: \"Sent cart data failed!\",\n        })\n      );\n    }\n  };\n};\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,CAAC;IAChBC,UAAU,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvEP,KAAK,CAACJ,aAAa,EAAE;MACrB,IAAI,CAACQ,YAAY,EAAE;QACjBJ,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UACfD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXb,UAAU,EAAEK,OAAO,CAACO,KAAK;UACzBhB,IAAI,EAAES,OAAO,CAACS;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLP,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACP,UAAU,IAAIK,OAAO,CAACO,KAAK;MAC1C;IACF,CAAC;IAEDG,UAAUA,CAACZ,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC/DP,KAAK,CAACJ,aAAa,EAAE;MAErB,IAAIQ,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAE;QAC/BV,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACkB,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACLH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACP,UAAU,IAAIO,YAAY,CAACK,KAAK;MAC/C;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMK,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CACNzB,SAAS,CAAC0B,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBP,KAAK,EAAE,YAAY;MACnBQ,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2DAA2D,EAC3D;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;MAC3B,CACF,CAAC;MACD,IAAI,CAACM,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC;IAED,IAAI;MACF,MAAMR,WAAW,CAAC,CAAC;MAEnBJ,QAAQ,CACNzB,SAAS,CAAC0B,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBP,KAAK,EAAE,YAAY;QACnBQ,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdb,QAAQ,CACNzB,SAAS,CAAC0B,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfP,KAAK,EAAE,UAAU;QACjBQ,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMW,WAAW,GAAGtC,SAAS,CAACuC,OAAO;AAC5C,eAAevC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}